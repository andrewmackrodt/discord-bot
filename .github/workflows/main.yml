name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

env:
  PRIMARY_NODE_VERSION: 22

jobs:
  check-types:
    name: check-types
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node.js v${{ env.PRIMARY_NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.PRIMARY_NODE_VERSION }}
          cache: pnpm

      - name: Install package dependencies
        run: pnpm install --frozen-lockfile --strict-peer-dependencies --ignore-scripts

      - name: Check for type errors
        run: pnpm run build:check

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node.js v${{ env.PRIMARY_NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.PRIMARY_NODE_VERSION }}
          cache: pnpm

      - name: Install package dependencies
        run: pnpm install --frozen-lockfile --strict-peer-dependencies --ignore-scripts

      - if: ${{ env.GITEA_ACTIONS != 'true' }}
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest

      - if: ${{ env.GITEA_ACTIONS != 'true' && github.event_name == 'pull_request' }}
        name: Check for lint errors (GitHub Pull Request)
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm run lint:pr

      - if: ${{ env.GITEA_ACTIONS != 'true' && github.event_name == 'push' }}
        name: Check for lint errors (GitHub Push)
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm run lint:push

      - if: ${{ env.GITEA_ACTIONS == 'true' }}
        name: Check for lint errors
        run: pnpm run lint:check

  license-checker:
    name: license-checker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node.js v${{ env.PRIMARY_NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.PRIMARY_NODE_VERSION }}
          cache: pnpm

      - name: Install package dependencies
        run: pnpm install --frozen-lockfile --strict-peer-dependencies --ignore-scripts

      - name: Check for license violations
        run: pnpm run license:check

  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - name: Install system dependencies
        run: sudo apt install -qqy imagemagick

      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node.js v${{ env.PRIMARY_NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.PRIMARY_NODE_VERSION }}
          cache: pnpm

      - name: Install package dependencies
        run: pnpm install --frozen-lockfile --strict-peer-dependencies

      - name: Run test suite
        run: pnpm test

  vulnerability-checker:
    name: vulnerability-checker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node.js v${{ env.PRIMARY_NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.PRIMARY_NODE_VERSION }}

      - name: Check for critical vulnerability
        run: pnpm run vulnerability:check
