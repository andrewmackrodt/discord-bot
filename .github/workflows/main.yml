name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

env:
  PRIMARY_NODE_VERSION: 20

jobs:
  eslint:
    name: eslint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - run: corepack enable

      - name: Setup Node.js v${{ env.PRIMARY_NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.PRIMARY_NODE_VERSION }}
          cache: pnpm

      - name: Install package dependencies
        run: pnpm install --frozen-lockfile

      - if: ${{ env.GITEA_ACTIONS != 'true' }}
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest

      - if: ${{ env.GITEA_ACTIONS != 'true' && github.event_name == 'pull_request' }}
        name: ESLint GitHub PR Review
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm run lint:review

      - if: ${{ env.GITEA_ACTIONS != 'true' && github.event_name == 'push' }}
        name: ESLint GitHub Check
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm run lint:check

      - if: ${{ env.GITEA_ACTIONS == 'true' }}
        name: ESLint
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm run lint

  jest:
    name: jest
    runs-on: ubuntu-latest
    steps:
      - name: Install system dependencies
        run: sudo apt install -qqy imagemagick

      - uses: actions/checkout@v4

      - run: corepack enable

      - name: Setup Node.js v${{ env.PRIMARY_NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.PRIMARY_NODE_VERSION }}
          cache: pnpm

      - name: Install package dependencies
        run: pnpm install --frozen-lockfile

      - name: Jest
        run: pnpm test
